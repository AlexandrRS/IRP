<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="cad3ba1b-b3c6-4310-bc39-b5c670c0fc01" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2020.1/project-config.xsd">
  <name>2. Build CF and Update DB</name>
  <description />
  <settings>
    <options>
      <option name="allowExternalStatus" value="true" />
      <option name="artifactRules" value="%env.Database1CName%.cf" />
    </options>
    <parameters>
      <param name="env.CheckConfigSettings" value="-IncorrectReferences -ThinClient -WebClient -Server -UnreferenceProcedures -HandlersExistence -EmptyHandlers -ExtendedModulesCheck -CheckUseModality -CheckUseSynchronousCalls" />
      <param name="env.DBLocale" value="en" />
      <param name="env.Database1CName" value="%dep.IRP_GitHubUpdate.env.Database1CName%" />
      <param name="env.PathToRACTools" value="%env.PathTo1CBin%\rac.exe" />
      <param name="env.SQLPassword" value="credentialsJSON:a93b11ea-65d2-45f0-8587-9ec1d0127f45" spec="password display='hidden'" />
      <param name="env.SQLUser" value="postgres" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_22" name="Drop DB MetaRunner" type="DropDB">
        <parameters>
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_5" name="Create new Template DB" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[start /wait "1cv8.exe" %env.PathTo1CPlatform%  CREATEINFOBASE Srvr=localhost;Ref=%env.Database1CName%;DBMS=PostgreSQL;DBSrvr=localhost;DB=%env.Database1CName%;DBUID=%env.SQLUser%;DBPwd=%env.SQLPassword%;CrSQLDB=Y;SchJobDn=Y;Locale="%env.DBLocale%"; /UseTemplate %teamcity.tool.TemplateIRP%\TemplateIRP.dt /Out %env.LogFile1C%
echo ##teamcity[compilationStarted compiler='Log from 1C: %env.LogFile1C%']
sh -c "while read line; do if [[ $line == *"Error"* ]]; then echo -e ""\e[31m $line""; else  echo -e ""\e[34m $line""; fi;  done < ""%env.LogFile1C%"";"
echo ##teamcity[compilationFinished compiler='Log from 1C: %env.LogFile1C%']]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_7" name="Convert from EDT to XML" type="simpleRunner">
        <parameters>
          <param name="script.content" value="ring edt workspace export --configuration-files %system.teamcity.build.tempDir%\xml --project %system.teamcity.build.workingDir%\IRP --workspace-location %system.teamcity.build.tempDir%\WP" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_8" name="Update DB Config from XML" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[start /wait "1cv8.exe" %env.PathTo1CPlatform%  Designer %env.ConnectionTo1C% /Out %env.LogFile1C% /LoadConfigFromFiles %system.teamcity.build.tempDir%\xml /UpdateDBCfg
echo ##teamcity[compilationStarted compiler='Log from 1C: %env.LogFile1C%']
sh -c "while read line; do if [[ $line == *"Error"* ]]; then echo -e ""\e[31m $line""; else  echo -e ""\e[34m $line""; fi;  done < ""%env.LogFile1C%"";"
echo ##teamcity[compilationFinished compiler='Log from 1C: %env.LogFile1C%']]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_9" name="Check syntax" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[start /wait "1cv8.exe" %env.PathTo1CPlatform%  Designer %env.ConnectionTo1C% /Out %env.LogFile1C% /CheckConfig %env.CheckConfigSettings%
echo ##teamcity[compilationStarted compiler='Log from 1C: %env.LogFile1C%']
sh -c "while read line; do if [[ $line == *""<<?>>""* ]]; then echo -e ""\e[31m $line""; else  echo -e ""\e[34m $line""; fi;  done < ""%env.LogFile1C%"";"
echo ##teamcity[compilationFinished compiler='Log from 1C: %env.LogFile1C%']]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_11" name="Create and attach cf" type="simpleRunner">
        <parameters>
          <param name="script.content" value="start /wait &quot;1cv8.exe&quot; %env.PathTo1CPlatform%  Designer %env.ConnectionTo1C% /Out %env.LogFile1C% /DumpCfg %system.teamcity.build.workingDir%\%env.Database1CName%.cf" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="IRP_GitTC" />
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="TRIGGER_2" type="buildDependencyTrigger">
        <parameters>
          <param name="afterSuccessfulBuildOnly" value="true" />
          <param name="branchFilter" value="+:*" />
          <param name="dependsOn" value="IRP_GitHubUpdate" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="BUILD_EXT_5" type="commit-status-publisher">
        <parameters>
          <param name="github_authentication_type" value="token" />
          <param name="github_host" value="https://api.github.com" />
          <param name="github_oauth_user" value="DitriXNew" />
          <param name="publisherId" value="githubStatusPublisher" />
          <param name="secure:github_access_token" value="credentialsJSON:1fa3b09b-5cd9-4521-80c7-3c52664962a9" />
          <param name="vcsRootId" value="IRP_GitTC" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_6" type="pullRequests">
        <parameters>
          <param name="authenticationType" value="token" />
          <param name="filterAuthorRole" value="MEMBER" />
          <param name="providerType" value="github" />
          <param name="secure:accessToken" value="credentialsJSON:1fa3b09b-5cd9-4521-80c7-3c52664962a9" />
          <param name="vcsRootId" value="IRP_GitTC" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_9" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="Designer already works with this infobase" />
          <param name="buildFailureOnMessage.reverse" value="false" />
          <param name="buildFailureOnMessage.stopBuildOnFailure" value="true" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_10" type="JetBrains.FileContentReplacer">
        <parameters>
          <param name="teamcity.file.content.replacer.failBuild" value="true" />
          <param name="teamcity.file.content.replacer.file.encoding" value="autodetect" />
          <param name="teamcity.file.content.replacer.file.encoding.custom" value="autodetect" />
          <param name="teamcity.file.content.replacer.pattern" value="#BuildNumber#" />
          <param name="teamcity.file.content.replacer.pattern.case.sensitive" value="true" />
          <param name="teamcity.file.content.replacer.regexMode" value="REGEX" />
          <param name="teamcity.file.content.replacer.replacement" value="%env.BUILD_NUMBER%" />
          <param name="teamcity.file.content.replacer.wildcards" value="+:IRP\src\Configuration\Configuration.mdo" />
        </parameters>
      </extension>
    </build-extensions>
    <dependencies>
      <depend-on sourceBuildTypeId="IRP_GitHubUpdate">
        <options>
          <option name="run-build-if-dependency-failed" value="CANCEL" />
          <option name="run-build-on-the-same-agent" value="true" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

